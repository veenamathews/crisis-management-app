# This is a basic workflow to help you get started with Actions
name: Deploy to Web Server
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # using Ubuntu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2 #this installs node and npm for us
        with:
          node-version: "14.x"
      - uses: actions/cache@v1 # this allows for re-using node_modules caching, making builds a bit faster.
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: NPM Cache Clean
        run: npm cache clean --force
        working-directory: ./crisis-management-app
      - name: NPM Install
        run: npm install
        working-directory: ./crisis-management-app
      - name: NPM Install Angular
        run: npm install -g @angular/cli > /dev/null
        working-directory: ./crisis-management-app
      - name: NPM build Angular Production
        run: ng build --prod
        working-directory: ./crisis-management-app
      - run: ls -R ~/
      - run: ls -R ./ghost
      - name: copy file via ssh key
        uses: appleboy/scp-action@master
        env:
          HOST:  ${{ secrets.HOST }}
          USERNAME:  ${{ secrets.USERNAME }}
          PORT:  ${{ secrets.PORT }}
          PASSWORD: ${{ secrets.PASSWORD }}
        with:
          source: "./ghost"
          target: ${{ secrets.DESTINATION }}
          strip_components: 2  
